{"ast":null,"code":"//actionTypes\nexport const FETCHED_ALBUMS = 'FETCHED_ALBUMS';\nexport const ADDED_ALBUM = 'ADDED_ALBUM';\nexport const UPDATED_ALBUM = 'UPDATED_ALBUM';\nexport const DELETED_ALBUM = 'DELETED_ALBUM';\n\n//actions\n\n//Action To Fetch Albums\nexport function fetchAlbums() {\n  return dispatch => {\n    const url = 'https://jsonplaceholder.typicode.com/albums';\n    fetch(url).then(response => response.json()).then(data => {\n      console.log(data, typeof data);\n      dispatch(fetchedAlbums(data.reverse())); //Storing albums in reverse.\n      //Use data.slice(0, 25) to limit albums\n    });\n  };\n}\n\n//Action to store fetched albums to store\nexport function fetchedAlbums(albums) {\n  return {\n    type: FETCHED_ALBUMS,\n    albums\n  };\n}\n\n//Action to add albums to API and store\nexport function addAlbum(title, id) {\n  return dispatch => {\n    const albumObject = {\n      userId: Date.now(),\n      id,\n      title\n    };\n    const url = 'https://jsonplaceholder.typicode.com/albums';\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(albumObject)\n    }).then(response => response.json()).then(data => {\n      // dispatch(addedAlbum(data));    //Since API does not support posting album\n      dispatch(addedAlbum(albumObject));\n    });\n  };\n}\n\n//Action to add album to store\nexport function addedAlbum(album) {\n  return {\n    type: ADDED_ALBUM,\n    album: album\n  };\n}\n\n//Action to update album in store and API\nexport function updateAlbum(newTitle, id, userId) {\n  return dispatch => {\n    const albumObject = {\n      userId,\n      id,\n      title: newTitle\n    };\n    const url = 'https://jsonplaceholder.typicode.com/albums/1';\n    fetch(url, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(albumObject)\n    }).then(response => response.json()).then(data => {\n      // dispatch(updatedAlbum(data));    //Since API does not support putting album\n      dispatch(updatedAlbum(albumObject));\n    });\n  };\n}\n\n//Action to store updated album to store\nexport function updatedAlbum(album) {\n  return {\n    type: UPDATED_ALBUM,\n    album\n  };\n}\n\n//Action to delete album in API and store based on ID\nexport function deleteAlbum(id) {\n  return dispatch => {\n    fetch('https://jsonplaceholder.typicode.com/albums/1', {\n      method: 'DELETE'\n    }).then(response => response.json()).then(data => {\n      // dispatch(deletedAlbum(data));    //Since API does not support deleting album\n      dispatch(deletedAlbum(id));\n    });\n  };\n}\n\n//Action to delete album in store\nexport function deletedAlbum(id) {\n  return {\n    type: DELETED_ALBUM,\n    id\n  };\n}","map":{"version":3,"names":["FETCHED_ALBUMS","ADDED_ALBUM","UPDATED_ALBUM","DELETED_ALBUM","fetchAlbums","dispatch","url","fetch","then","response","json","data","console","log","fetchedAlbums","reverse","albums","type","addAlbum","title","id","albumObject","userId","Date","now","method","headers","body","JSON","stringify","addedAlbum","album","updateAlbum","newTitle","updatedAlbum","deleteAlbum","deletedAlbum"],"sources":["C:/Users/My Pc/Desktop/HTML/PROJECT/album_list-reactjs/src/actions/index.js"],"sourcesContent":["//actionTypes\r\nexport const FETCHED_ALBUMS = 'FETCHED_ALBUMS';\r\nexport const ADDED_ALBUM = 'ADDED_ALBUM';\r\nexport const UPDATED_ALBUM = 'UPDATED_ALBUM';\r\nexport const DELETED_ALBUM = 'DELETED_ALBUM';\r\n\r\n//actions\r\n\r\n//Action To Fetch Albums\r\nexport function fetchAlbums() {\r\n  return (dispatch) => {\r\n    const url = 'https://jsonplaceholder.typicode.com/albums';\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data, typeof data);\r\n        dispatch(fetchedAlbums(data.reverse())); //Storing albums in reverse.\r\n        //Use data.slice(0, 25) to limit albums\r\n      });\r\n  };\r\n}\r\n\r\n//Action to store fetched albums to store\r\nexport function fetchedAlbums(albums) {\r\n  return {\r\n    type: FETCHED_ALBUMS,\r\n    albums,\r\n  };\r\n}\r\n\r\n//Action to add albums to API and store\r\nexport function addAlbum(title, id) {\r\n  return (dispatch) => {\r\n    const albumObject = {\r\n      userId: Date.now(),\r\n      id,\r\n      title,\r\n    };\r\n    const url = 'https://jsonplaceholder.typicode.com/albums';\r\n    fetch(url, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(albumObject),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // dispatch(addedAlbum(data));    //Since API does not support posting album\r\n        dispatch(addedAlbum(albumObject));\r\n      });\r\n  };\r\n}\r\n\r\n//Action to add album to store\r\nexport function addedAlbum(album) {\r\n  return {\r\n    type: ADDED_ALBUM,\r\n    album: album,\r\n  };\r\n}\r\n\r\n//Action to update album in store and API\r\nexport function updateAlbum(newTitle, id, userId) {\r\n  return (dispatch) => {\r\n    const albumObject = {\r\n      userId,\r\n      id,\r\n      title: newTitle,\r\n    };\r\n    const url = 'https://jsonplaceholder.typicode.com/albums/1';\r\n    fetch(url, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(albumObject),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // dispatch(updatedAlbum(data));    //Since API does not support putting album\r\n        dispatch(updatedAlbum(albumObject));\r\n      });\r\n  };\r\n}\r\n\r\n//Action to store updated album to store\r\nexport function updatedAlbum(album) {\r\n  return {\r\n    type: UPDATED_ALBUM,\r\n    album,\r\n  };\r\n}\r\n\r\n//Action to delete album in API and store based on ID\r\nexport function deleteAlbum(id) {\r\n  return (dispatch) => {\r\n    fetch('https://jsonplaceholder.typicode.com/albums/1', {\r\n      method: 'DELETE',\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // dispatch(deletedAlbum(data));    //Since API does not support deleting album\r\n        dispatch(deletedAlbum(id));\r\n      });\r\n  };\r\n}\r\n\r\n//Action to delete album in store\r\nexport function deletedAlbum(id) {\r\n  return {\r\n    type: DELETED_ALBUM,\r\n    id,\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}